apply plugin: 'com.android.library'

//ext {
//    PUBLISH_GROUP_ID = 'com.lib.henrasn'
//    PUBLISH_ARTIFACT_ID = 'androidformvalidator'
//    PUBLISH_VERSION = '0.0.1'

//    bintrayRepo = 'android-library'
//    bintrayName = 'android-form-validator'
//
//    publishedGroupId = 'com.lib.henrasn'
//    libraryName = 'androidFormValidator'
//    artifact = 'androidformvalidator'
//
//    siteUrl = 'https://github.com/henrasn/AndroidFormValidator'
//    gitUrl = 'https://github.com/henrasn/AndroidFormValidator.git'
//
//    libraryVersion = '0.1.0'
//
//    developerId = 'henrasn'
//    developerName = 'Henra Setia Nugraha'
//    developerEmail = 'henra.sn@gmail.com'
//
//    licenseName = 'The Apache Software License, Version 2.0'
//    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//    allLicenses = ["Apache-2.0"]
//}

version = "1.1.6"
group = "commerce.productmanagement"

def siteUrl = 'https://github.com/henrasn/AndroidFormValidator'
def gitUrl = 'https://github.com/henrasn/AndroidFormValidatorcmdcmd.git'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "android-library"
        name = "android-form-validator"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'A library product management for m-commerce'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'henrasn'
                        name 'Henra Setia Nugraha'
                        email 'henra.sn@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "0.1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.1'
    compile 'com.github.ganfra:material-spinner:1.1.1'
    testCompile 'junit:junit:4.12'
}

//apply from: 'https://raw.githubusercontent.com/blundell/release-android-library/master/android-release-aar.gradle'
//apply from: 'install.gradle'
//apply from: 'bintray.gradle'
//apply from: 'https://raw.githubusercontent.com/nisrulz/JCenter/master/installv1.gradle'
//apply from: 'https://raw.githubusercontent.com/nisrulz/JCenter/master/bintrayv1.gradle'

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}
Contact GitHub