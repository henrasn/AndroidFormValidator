apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group = 'com.lib.henrasn' // Change this to match your package name
version = '1.0.0'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "0.0.1"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.1'
    compile 'com.github.ganfra:material-spinner:1.1.1'
    testCompile 'junit:junit:4.12'
}

bintray {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    pkg {
        repo = 'android-library'
        name = 'android-form-validator' // the name of the package in BinTray

        version {
            name = '0.0.1' // the name of your library project
            desc = 'This is the development version'
            released  = new Date()
            vcsTag = '1.0.0' // the version
        }

        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/henrasn/AndroidFormValidator.git' // your GitHub repo
        websiteUrl = 'https://github.com/henrasn/AndroidFormValidator' // your website or whatever has documentation
    }
    configurations = ['archives']
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

task generateJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath()
            .join(File.pathSeparator))
}

task generateJavadocsJar(type: Jar) {
    from generateJavadocs.destinationDir
    classifier 'javadoc'
}

generateJavadocsJar.dependsOn generateJavadocs


artifacts {
    archives generateJavadocsJar
    archives generateSourcesJar
}